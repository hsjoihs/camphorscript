
mov 1; inc 10; 
mov 1; loop; mov 0; inc 10; 
	mov 1; dec 1; 
mov 1; pool; assert_zero 1; 
mov 4; inc 3; 
mov 5; inc 5; 
mov 0; loop; mov 7; inc 1; 
	mov 7; loop; mov 2; inc 1; 
		mov 1; inc 1; 
		mov 7; dec 1; 
	mov 7; pool; assert_zero 7; 
	mov 2; loop; mov 7; inc 1; 
		mov 2; dec 1; 
	mov 2; pool; assert_zero 2; 
	mov 2; inc 10; 
	mov 1; loop; mov 2; dec 1; 
		mov 1; dec 1; 
	mov 1; pool; assert_zero 1; 
	mov 3; inc 1; 
	mov 2; loop; mov 3; loop; mov 3; dec 1; 
		mov 3; pool; assert_zero 3; 
		mov 2; loop; mov 2; dec 1; 
		mov 2; pool; assert_zero 2; 
	mov 2; pool; assert_zero 2; 
	mov 3; loop; mov 7; loop; mov 7; dec 1; 
		mov 7; pool; assert_zero 7; 
		mov 8; inc 1; 
		mov 3; dec 1; 
	mov 3; pool; assert_zero 3; 
	mov 8; loop; mov 2; inc 1; 
		mov 1; inc 1; 
		mov 8; dec 1; 
	mov 8; pool; assert_zero 8; 
	mov 2; loop; mov 8; inc 1; 
		mov 2; dec 1; 
	mov 2; pool; assert_zero 2; 
	mov 2; inc 10; 
	mov 1; loop; mov 2; dec 1; 
		mov 1; dec 1; 
	mov 1; pool; assert_zero 1; 
	mov 3; inc 1; 
	mov 2; loop; mov 3; loop; mov 3; dec 1; 
		mov 3; pool; assert_zero 3; 
		mov 2; loop; mov 2; dec 1; 
		mov 2; pool; assert_zero 2; 
	mov 2; pool; assert_zero 2; 
	mov 3; loop; mov 8; loop; mov 8; dec 1; 
		mov 8; pool; assert_zero 8; 
		mov 9; inc 1; 
		mov 3; dec 1; 
	mov 3; pool; assert_zero 3; 
	mov 6; inc 1; 
	mov 4; dec 1; 
	mov 4; loop; mov 2; inc 1; 
		mov 1; inc 1; 
		mov 4; dec 1; 
	mov 4; pool; assert_zero 4; 
	mov 1; loop; mov 4; inc 1; 
		mov 1; dec 1; 
	mov 1; pool; assert_zero 1; 
	mov 3; inc 1; 
	mov 2; loop; mov 3; loop; mov 3; dec 1; 
		mov 3; pool; assert_zero 3; 
		mov 2; loop; mov 2; dec 1; 
		mov 2; pool; assert_zero 2; 
	mov 2; pool; assert_zero 2; 
	mov 3; loop; mov 4; inc 3; 
		mov 2; inc 7; 
		mov 2; loop; mov 1; inc 10; 
			mov 2; dec 1; 
		mov 2; pool; assert_zero 2; 
		mov 1; output; 
		mov 2; inc 5; 
		mov 2; loop; mov 1; inc 7; 
			mov 2; dec 1; 
		mov 2; pool; assert_zero 2; 
		mov 1; output; 
		mov 2; inc 3; 
		mov 2; loop; mov 1; inc 5; 
			mov 2; dec 1; 
		mov 2; pool; assert_zero 2; 
		mov 1; inc 2; mov 1; output; 
		mov 1; output; 
		mov 1; loop; mov 1; dec 1; 
		mov 1; pool; assert_zero 1; 
		mov 6; loop; mov 6; dec 1; 
		mov 6; pool; assert_zero 6; 
		mov 3; dec 1; 
	mov 3; pool; assert_zero 3; 
	mov 5; dec 1; 
	mov 5; loop; mov 2; inc 1; 
		mov 1; inc 1; 
		mov 5; dec 1; 
	mov 5; pool; assert_zero 5; 
	mov 2; loop; mov 5; inc 1; 
		mov 2; dec 1; 
	mov 2; pool; assert_zero 2; 
	mov 3; inc 1; 
	mov 1; loop; mov 3; loop; mov 3; dec 1; 
		mov 3; pool; assert_zero 3; 
		mov 1; loop; mov 1; dec 1; 
		mov 1; pool; assert_zero 1; 
	mov 1; pool; assert_zero 1; 
	mov 3; loop; mov 5; inc 5; 
		mov 2; inc 8; 
		mov 2; loop; mov 1; inc 8; 
			mov 2; dec 1; 
		mov 2; pool; assert_zero 2; 
		mov 1; inc 2; mov 1; output; 
		mov 2; inc 6; 
		mov 2; loop; mov 1; inc 8; 
			mov 2; dec 1; 
		mov 2; pool; assert_zero 2; 
		mov 1; inc 3; mov 1; output; 
		mov 1; inc 5; mov 1; output; 
		mov 1; output; 
		mov 1; loop; mov 1; dec 1; 
		mov 1; pool; assert_zero 1; 
		mov 6; loop; mov 6; dec 1; 
		mov 6; pool; assert_zero 6; 
		mov 3; dec 1; 
	mov 3; pool; assert_zero 3; 
	mov 6; loop; mov 9; inc 48; mov 9; output; 
		mov 9; dec 48; 
		mov 8; inc 48; mov 8; output; 
		mov 8; dec 48; 
		mov 7; inc 48; mov 7; output; 
		mov 7; dec 48; 
		mov 6; dec 1; 
	mov 6; pool; assert_zero 6; 
	mov 2; inc 4; 
	mov 2; loop; mov 1; inc 11; 
		mov 2; dec 1; 
	mov 2; pool; assert_zero 2; 
	mov 1; output; 
	mov 2; inc 3; 
	mov 2; loop; mov 1; dec 4; 
		mov 2; dec 1; 
	mov 2; pool; assert_zero 2; 
	mov 1; output; 
	mov 1; loop; mov 1; dec 1; 
	mov 1; pool; assert_zero 1; 
	mov 0; dec 1; 
mov 0; pool; assert_zero 0; 
