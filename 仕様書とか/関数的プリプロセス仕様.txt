【a】	: aを0回以上繰り返す
識別子	: /[a-zA-Z_][a-zA-Z0-9]*/の形のもので、予約語でないもの
予約語	: void, char, const, constant, delete, infixl, infixrのどれか
型	: char&, constant char, const charの3種。
	  char&型はchar型変数の型、constant char型はchar型定数の型、const char はchar&とconstant charの総称。
演算子	: [-!%&*+,/:<=>?@^|][-!%&*+,/:<=>?@^|~\s]*の形のもの。但し、/*または*/を含むものは認められない。	

関数の仕様
	宣言構文
		void 識別子(型 識別子【演算子 型 識別子】){【文】}
	
	オーバーロード
		型情報が異なる同名の関数を定義することができる。一致する場合はできない。(二重宣言エラー)
		なお、const charでの宣言はchar&型での宣言とconstant char型での宣言を兼ねるものとする。
	
	呼び出し構文
		関数名(値【演算子 値】);
	
	呼び出し処理
		　関数名が存在する
		→中で使われている全ての演算子の結合宣言が存在する
		→型が一致する
		→中で使われている全てのchar&型が互いに等しくない
		→真引数で仮引数を置き換えてできるブロックを挿入
		→ブロック内で再帰するが、自身と完全に(型を含む)一致する関数は展開しない。

演算子の仕様
	結合宣言構文
		infixl 非負整数(演算子);
		infixr 非負整数(演算子);
		2重定義は構わないが矛盾定義はエラー
		なお、暗黙に定義されているものとして
		infixr 5(+=);
		infixr 5(-=);
		infixr 0(,);
		がある。
	
	宣言構文
		void(演算子)(型 識別子【演算子 型 識別子】;型 識別子【演算子 型 識別子】){【文】}
	
	オーバーロード
		型情報が異なる同名の演算子を定義することができる。一致する場合はできない。(二重宣言エラー)
		なお、const charでの宣言はchar&型での宣言とconstant char型での宣言を兼ねるものとする。
	
	呼び出し構文
		(値【演算子 値】)演算子(値 【演算子 値】);
			【】の中の全ての演算子の結合が呼び出される演算子の結合より大きい場合、カッコは省略可能。
		(演算子)(値【演算子 値】;値【演算子 値】);
	
	呼び出し処理
		　演算子名が存在する
		→中で使われている全ての演算子の結合宣言が存在する
		→型が一致する
		→中で使われている全てのchar&型が互いに等しくない
		→真引数で仮引数を置き換えてできるブロックを挿入
		→ブロック内で再帰するが、自身と完全に(型を含む)一致する演算子は展開しない。


スコープの仕様
	関数・演算子の時
		文として関数宣言・演算子宣言・結合宣言などを使うことはできない。
		中で宣言した変数は必ずdeleteしなければならない。
		引数はdeleteできない。
		グローバル変数は見えない。
	
	whileの時
		文として関数宣言・演算子宣言・結合宣言などを使うことはできない。
		中で宣言した変数は必ずdeleteしなければならない。
		グローバル変数は見える。
	
	通常ブロックの時
		文として関数宣言・演算子宣言・結合宣言などを使うことはできない。
		中で宣言した変数は必ずdeleteしなければならない。
		グローバル変数は見える。