data Upgrade a = Single a | Block [Upgrade a] deriving(Show)

data Extra = X deriving(Show,Eq,Ord,Bounded,Enum)
type Sent  = Upgrade (Extra,SimpleSent)
type Sents  = [Sent]

type TypeList1 = (Type, Ident, [(Oper, Type, Ident)])

data SimpleSent =
 Char Ident | Del Ident | Scolon | Infl Integer String | Infr Integer String | Sp String | Comm String | 
 Func1 Ident TypeList1 Sent | Func2 Oper TypeList1 TypeList1 Sent | Call1 Ident ValueList |
 Call2 Oper ValueList ValueList | Call3 Oper ValueList ValueList | Call4 [(Value,Oper)] ValueList | Call5 ValueList deriving(Show)

data Type = CNSTNT_CHAR | CONST_CHAR | CHAR_AND deriving(Show,Eq)
 
data Value = Var Ident | Constant Integer deriving(Show,Eq)

Char, Del, Scolon, Infl, Infr, Sp, Commは自明。
問題は残ったFuncとかCallである。

まずは定義。
 return(simple$Func1 name list1 m)
-- void name(list1){m}

 return(simple$Func2 op list1 list2 m)
-- void(演算子)(型 識別子【演算子 型 識別子】;型 識別子【演算子 型 識別子】){【文】}