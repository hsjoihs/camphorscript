To do
Step7のエラーメッセージ改良
ロゴ(Git的な)欲しい
行数ズレ解消したい
エラー検出強力に(関数宣言 No checkはいかん)
ccsrcとの統合
zero-checkerといろんな最適化とメモリ位置固定pragma 
GPL付加
Text化
汎用性を上げるためautotestの外部呼び出し以外をHaskell化など
北京仕様書に書いてある様々な最適化


ver 0.7.6   23:38 2014/09/05 (金)
--課題--
仕様書のような何かを書き始めたい
assert仕様書処理を処理したい

--UI--
UIに縦方向の伸縮性も与えた -- 15:43 2014/09/03 (水)

--assert--
そもそも様々なassertはどこで挿入すべきか -- 4:42 2014/09/05 (金)
まあStep3-IIでするのが当然良い訳だが -- 4:44 2014/09/05 (金)
まずはそれらのassertを無視して次に渡すという作業をBase_Step5で行おう -- 4:46 2014/09/05 (金)
何事も基礎なしでは進まない -- 4:46 2014/09/05 (金)
まずStep3-IIはCCSを取って(現状では)NDを返す -- 4:53 2014/09/05 (金)
そこを分割して、それぞれnouLittleとnouMoreという名前にしよう -- 5:05 2014/09/05 (金)
まずは正しいNDに対してのみBase_Step5を透明にした -- 5:22 2014/09/05 (金)
autotest通る -- 5:28 2014/09/05 (金)
autotesterr通る -- 5:32 2014/09/05 (金)
optotest通る -- 5:34 2014/09/05 (金)
次にNL間のみassert_zeroという名をunsafe_assertに変更 -- 5:34 2014/09/05 (金)
仕様書のI_know_that_I_am_right_assertをdynamic_assertに変更 -- 5:36 2014/09/05 (金)
autotest通る -- 5:40 2014/09/05 (金)
static_assert作る -- 23:19 2014/09/05 (金)
autotest通る -- 23:24 2014/09/05 (金)
beginとend両方作る -- 23:29 2014/09/05 (金)
autotest通る -- 23:32 2014/09/05 (金)

--テンプレ--
改良が殆どないけどverUpしよう -- 23:33 2014/09/05 (金)
autotesterr通る -- 23:36 2014/09/05 (金)
optotest通る -- 23:38 2014/09/05 (金)
verUp -- 23:38 2014/09/05 (金)


ver 0.7.5   6:09 2014/09/03 (水)
--課題--
そろそろ北京仕様書に書いてある様々な最適化をやっていきたい

--微調整--
monadで書きにくいのをApplicativeにしよう -- 3:26 2014/08/26 (火)
してきた -- 3:44 2014/08/26 (火)
明示再帰を排除しよう。まずはStep7で。 -- 3:46 2014/08/26 (火)
はいautotest失敗 -- 4:14 2014/08/26 (火)
パラメータ間違ってただけでした本当にありがとうございました -- 4:24 2014/08/26 (火)
そしてテスト中の暇つぶしのカルメンで300コンボとはこれ如何に -- 4:24 2014/08/26 (火)
再帰は飛んだしState化もできた -- 4:52 2014/08/26 (火)
autotest通る -- 4:55 2014/08/26 (火)
Base_Step1も同様にしよう -- 4:57 2014/08/26 (火)
レコード構文へ変換するの面倒。半分終わる。 -- 5:21 2014/08/26 (火)
終わった。では運命のautotest -- 5:40 2014/08/26 (火)
よし通る -- 5:43 2014/08/26 (火)
パターンを模索、一応見つかる -- 5:56 2014/08/26 (火)
変数移動part1 -- 6:10 2014/08/26 (火)
変数移動part2 -- 6:17 2014/08/26 (火)
warning潰し切る -- 10:02 2014/08/26 (火)
autotest失敗、バグだ -- 10:04 2014/08/26 (火)
成功 -- 10:09 2014/08/26 (火)

--最適化--
茶番もいい加減にしてそろそろ最適化やっていきたいですな -- 21:01 2014/08/30 (土)
当然現状(小説＆宿題＆祭)では無理だが計画を立てる位なら何とか -- 21:02 2014/08/30 (土)
まずはassertの種類を考えよう -- 21:03 2014/08/30 (土)
あ、当然この部分後で別ファイルに分離ね -- 21:03 2014/08/30 (土)
まずはdeleteとか/*# MEMORY using #*/とかのユーザー入力によるもの -- 21:05 2014/08/30 (土)
これらは初心者とかが間違って使う可能性があるので、
0が保証されない場合はwarningを出さねばいかん -- 21:07 2014/08/30 (土)
次にライブラリが保証するやつ -- 21:30 2014/08/30 (土)
最後にwhileの後とかcharの後とか静的にコンパイラ側で保証できるやつ -- 21:31 2014/08/30 (土)
これはそれぞれの文にassertするわけにもいかないので、 
assert_static_beginとassert_static_endで挟もう -- 21:32 2014/08/30 (土)
ということで、採用するassertは以下の4つ -- 21:36 2014/08/30 (土)
1. static_assert_begin
2. static_assert_end
3. unsafe_assert(fiftythreeさん命名)
4. I_know_that_I_am_right_assert(上に同じ)
え、4が長い？だって使うべからざるものだもん
「使うべからざるものは使いにくく」ってのは当然の原則 -- 21:46 2014/08/30 (土)
assert最適化を仕様書に追加、change.logからは削除しないことに決定 -- 9:05 2014/08/31 (日)

--最適化part2--
さーてやっていきますかね -- 15:50 2014/09/01 (月)
…と思ったらUSBメモリ内にはmtlがないから面倒だ -- 15:57 2014/09/01 (月)
インストーラをbatで書こう -- 16:03 2014/09/01 (月)
…いろいろと上手くいかない -- 16:34 2014/09/01 (月)

--UI--
UIを改良して伸縮できるように -- 18:03 2014/09/02 (月)
UIのバグ改良 -- 18:13 2014/09/02 (月)
"step " ++ showNum x ++ "does not exist"を
"step " ++ showNum x ++ " does not exist"に修正 -- 18:14 2014/09/02 (月)

--テンプレ--
改良が殆どないけどverUpしよう -- 6:00 2014/09/03 (水)
autotes(t|terr)通る -- 6:07 2014/09/03 (水)
optotest通る -- 6:09 2014/09/03 (水)
verUp -- 6:09 2014/09/03 (水)


ver 0.7.4  20:51 2014/08/25 (月)
--課題--
そろそろ北京仕様書に書いてある様々な最適化をやっていきたい
あとGUIラッパも作っていきたいけどHTAしか無いかな

--整理--
古いtest logを消し古いchange logを分割 -- 17:29 2014/08/23 (土)

--optotest増量--
optotestを増やそう -- 17:44 2014/08/23 (土)
xAtoIを増やしたけどピリオドが1つずつ出ない。多分flush系の何か。 -- 17:55 2014/08/23 (土)
flushを足した -- 18:01 2014/08/23 (土)
しかしAtoIが速くてIsNumberが遅いのは何故だろう -- 18:01 2014/08/23 (土)
Fizzbuzzとかも作ったところでテスト例を作るのが面倒になってきた -- 22:08 2014/08/23 (土)
…面倒？そうだ、Haskellに作らせよう -- 22:09 2014/08/23 (土)

--interpreter--
optotestが遅いのってinterpreterのmemory updateが重いからじゃないかな -- 22:37 2014/08/23 (土)
だってlistだもん -- 22:37 2014/08/23 (土)
さらにgenericIndexなどという悪魔の手先まで使ってる -- 22:37 2014/08/23 (土)
ということでData.Mapにしよう -- 22:37 2014/08/23 (土)
もちろん内部だけ改装して外は出来れば変えないようにしよう -- 22:38 2014/08/23 (土)
…とか言いながら初っ端から問題発見 -- 22:39 2014/08/23 (土)
initial stateは変えないと -- 22:39 2014/08/23 (土)
変えたので後は内部で対処しよう -- 22:41 2014/08/23 (土)
内部で対処できた -- 22:53 2014/08/23 (土)
せっかくだから時間を測ろう -- 22:53 2014/08/23 (土)
再コンパイル前:62秒 -- 22:55 2014/08/23 (土)
再コンパイル後:58秒 -- 22:58 2014/08/23 (土)
………えー？ -- 22:58 2014/08/23 (土)
まあいいや悪魔の手先を排除できたし -- 22:58 2014/08/23 (土)
autotest通る -- 23:06 2014/08/23 (土)
autotesterr通る -- 23:10 2014/08/23 (土)
optotest通る -- 23:11 2014/08/23 (土)

--GUI--
HTAでコマンドを実行する方法が分かったので早速作ったら動いた -- 23:36 2014/08/23 (土)
参考文献に追加 -- 23:38 2014/08/23 (土)
いやー流石language_and_engineeringさんは有難い -- 23:38 2014/08/23 (土)
-CオプションのGUI出来た -- 6:09 2014/08/24 (日)
-Cオプションの処理できた -- 6:41 2014/08/24 (日)
一応処理は全部書けた -- 8:01 2014/08/24 (日)
interpretも出来れば書きたいが後回し -- 8:08 2014/08/24 (日)

--optotest例作成--
test fileをHaskellに作らせれば楽ができる -- 8:12 2014/08/24 (日)
ということで乱数を考えよう -- 8:52 2014/08/24 (日)
乱数は出来たがどう散らすかが問題だ -- 9:08 2014/08/24 (日)

--prettyprint--
prettyprintとかshow'とかって解体したいよね -- 15:31 2014/08/25 (月)
せっかくshowを分解してもshow'が残っていては意味が無い -- 15:31 2014/08/25 (月)
ということでprettyprintを排除しよう -- 15:33 2014/08/25 (月)
排除した -- 15:56 2014/08/25 (月)

--optotest例--
「入力文字数が足りなくて失敗する」のを明示的にテスト条件にしよう -- 15:57 2014/08/25 (月)
そうすれば乱数が作りやすい -- 15:58 2014/08/25 (月)
"input" :-> FAILとか書きたいけど面倒なのでFAIL "input"で行こう -- 15:58 2014/08/25 (月)
さてfailの場合の処理を考えよう -- 16:03 2014/08/25 (月)
…関数化しすぎて読めない(´・ω・｀) -- 16:06 2014/08/25 (月)
読めた -- 16:07 2014/08/25 (月)
多分書けた -- 17:44 2014/08/25 (月)
成功 -- 17:50 2014/08/25 (月)
さてではoptotest例作成器を作ろう -- 18:40 2014/08/25 (月)
…どういうテストデータを作ったものか -- 19:26 2014/08/25 (月)
下手なアルゴリズムを考えだすより、何文字のサンプルをどれほど作るべきかを手動で入れよう -- 19:31 2014/08/25 (月)
サンプルは40個ほどでいいか -- 19:39 2014/08/25 (月)
少ない気もするがどうせ特にテストしたい例を後で手動で足すだろうし -- 19:41 2014/08/25 (月)
3個が短い例、3個が長い例、残りが丁度ぐらいかな -- 19:43 2014/08/25 (月)
丁度だけ作るようにしてコンパイル通す -- 20:14 2014/08/25 (月)
できたのでmainから呼べるようにしなきゃね -- 20:21 2014/08/25 (月)
出来た -- 20:36 2014/08/25 (月)

--テンプレ--
autotest通る -- 20:44 2014/08/25 (月)
autotesterr通る -- 20:47 2014/08/25 (月)
optotest通る -- 20:51 2014/08/25 (月)
verUp -- 20:51 2014/08/25 (月)



ver 0.7.3  17:08 2014/08/23 (土)
--課題--
そろそろ北京仕様書に書いてある様々な最適化をやっていきたい
あとGUIラッパも作っていきたいけどHTAしか無いかな
optotestを終わらせたい
99 bottles of beer on the wall書きたい

--99 bottles of beer on the wall--
はい、ネットにありました。
しかもアドレス固定のが。 -- 13:12 2014/08/21 (木)
どれどれ、要求メモリは9か。 -- 13:12 2014/08/21 (木)
行数が700を超えているが。 -- 13:13 2014/08/21 (木)
取りあえずclearを処理。ここらへんの処理を自動化出来ないものかね -- 13:36 2014/08/21 (木)
7000字切った。いやー文字列処理はごっそり文字数とSAN値が削れますな -- 13:54 2014/08/21 (木)
400行切った。いやー文字(ry
6000字切った。いやー(ry -- 14:11 2014/08/21 (木)
300行切った。い(ry -- 14:14 2014/08/21 (木)
最後まで掛け算化できた -- 14:16 2014/08/21 (木)
バックアップ取る -- 14:18 2014/08/21 (木)

--conditional--
conditionalライブラリを作り、Fizzbuzzを依存させた -- 6:56 2014/08/22 (金)
当然再コンパイルである -- 6:57 2014/08/22 (金)
autotestも無事通る -- 6:59 2014/08/22 (金)

--error--
前に作ったerror pragmaをautotesterrに追加 -- 7:03 2014/08/22 (金)
autotesterr通る -- 7:06 2014/08/22 (金)

--stdcalc--
そろそろstdcalcに新たな関数足したいんだけど再コンパイルが面倒 -- 7:09 2014/08/22 (金)
…やるしか無いか -- 7:10 2014/08/22 (金)
ということで2つほど演算子追加 -- 7:11 2014/08/22 (金)
…5つも再コンパイルするとか絶望的なのでstdcalc2という名にした-- 7:15 2014/08/22 (金)
ついでにconditionalが読むのもstdcalc2にした -- 7:16 2014/08/22 (金)
後は先ほど再コンパイルしたfizzbuzzを直すだけで済む -- 7:17 2014/08/22 (金)
fizzbuzz再コンパイルした -- 7:23 2014/08/22 (金)
autotest通る -- 7:26 2014/08/22 (金)

--99 bottles part2--
大体using化できたが、解読は未だできず -- 7:52 2014/08/22 (金)
文字コード書いた -- 14:23 2014/08/22 (金)
制御構文が面倒だがまずはコピペされたと思われるコードをまとめるところからだ -- 15:09 2014/08/22 (金)
10の位と1の位に分ける処理を関数化 -- 15:22 2014/08/22 (金)
まとめる -- 15:26 2014/08/22 (金)
謎のwhile軍団が怖い -- 15:34 2014/08/22 (金)
debug関数作った -- 15:53 2014/08/22 (金)
1判定解明。でもアンダーフロー。 -- 15:57 2014/08/22 (金)
ちょっと条件系をまとめた -- 16:40 2014/08/22 (金)
whileが抜けたので一旦ここで止めておいてバックアップ -- 10:23 2014/08/23 (土)

--Traversable--
Data.Traversableとかいうライブラリを見つけたので使おう -- 10:26 2014/08/23 (土)
取りあえずNon,Sep,TailをTraversableのインスタンスに -- 10:59 2014/08/23 (土)
Listlike排除作戦で地元住民の怒りを買ったので戦闘中 -- 11:23 2014/08/23 (土)
戦闘終了、buildに入る -- 11:26 2014/08/23 (土)
なおListlikeはまだ排除できていない模様 -- 11:27 2014/08/23 (土)
build終わる、autotestへ -- 11:28 2014/08/23 (土)
autotest通る、autotesterrへ -- 11:32 2014/08/23 (土)
autotesterrも通る -- 11:34 2014/08/23 (土)

--Listlike排除--
Listlikeを消したらWarnに影響 -- 13:36 2014/08/23 (土)
WarningをData.Sequenceに変更 -- 13:37 2014/08/23 (土)
諸々を調整しListlike排除成功 -- 13:39 2014/08/23 (土)

--Warning--
warningのデフォルトを-Wnoneでなく-Wnormalにした -- 13:46 2014/08/23 (土)

--HLint--
HLint掛けてみた -- 13:49 2014/08/23 (土)
Camelとdupを無視 -- 13:59 2014/08/23 (土)
残りは全て解決 -- 13:59 2014/08/23 (土)

--optotest--
さて、長々と伸ばしてきたoptotestやりますかね -- 15:57 2014/08/23 (土)
周辺はできた -- 16:41 2014/08/23 (土)
中央処理だが、traverseがとても便利 -- 16:41 2014/08/23 (土)
さて中心処理できた -- 16:46 2014/08/23 (土)
テストもしたが余りにも遅いから凍ったかと思える -- 16:47 2014/08/23 (土)
よってメッセージを増やそう -- 16:48 2014/08/23 (土)
増やして進捗が少しは見やすくなった -- 16:59 2014/08/23 (土)

--テンプレ--
autotest通す -- 17:04 2014/08/23 (土)
autotesterr通す -- 17:08 2014/08/23 (土)
verUp -- 17:08 2014/08/23 (土)