パラレルワールドでのお話
ver 0.2.16  
なんかisNumberがコンパイルできない問題発生
ver 0.2.3とver 0.2.4の間で起こっている模様


ver 0.2.15  16:07 2014/04/09 (水)
remExtとかいう稚拙な関数の代わりに、
System.FilePathにあり、かつ仕様と合致するreplaceExtensionという関数を使うことに
さすが標準ライブラリ


ver 0.2.14  15:51 2014/04/09 (水)
猿知恵が失敗
どうしてもモジュールがインストールできなかったので結局自分で書くことにした
まあやりたいこととCppが完全に一致してるわけじゃないからね。仕方ないね。(←負け惜しみ）
あとUSBメモリ内のghcを呼び出せるようにbatを書き換え
さらにall.batは微妙に不便だったので削除
あとLanguage.Preprocessor.Cpphsを使ってみた結果、プリプロセス命令内のコメントは削除する仕様だった。
こちらとしてもそれで十分だとは思うけど行揃えはしっかりやりたい。
というのも、行数がずれてしまうとデバッグが面倒になるから。


ver 0.2.13  20:48 2014/04/08 (火)
もう諦めてLanguage.Preprocessor.Cpphsを使うことに
でも環境によっては使えないようなので、
XPreprocessというファイルを作ってコンパイルすればいいという猿知恵

ver 0.2.12  17:25 2014/04/08 (火)
コメント対応が稚拙に思えてきたので別の方法を思いついた
まずコメントのみを抜き出す
残りをプリプロセスする
そしてコメントを戻す

コメントは単一の空白に置き換えられるようにしようかな

char 		char 		char 
/*a		 a;		a;/*a
b		#line 5		b
c*/a;		char b;		c*/
char b;				#line 5
				char b;
char a; /* a */
ということで適当にBase_Step1_comment

つまり
1.コメントを空白に置き換える

ver 0.2.11 18:34 2014/04/07 (月)
なんか外部の開発環境でSafeとData.List.NonEmptyが使えなかったので対応した

ver 0.2.10 23:15 2014/04/06 (日)
#lineに対応
あとはincludeを残すのみ

ver 0.2.9  22:58 2014/04/06 (日)
Base_Step1のSource Nameをファイル名にした
でも確実にincludeとか必要だよね
あと、非常に面倒だと分かったのでline命令を作る

ver 0.2.8  19:56 2014/04/06 (日)
Data.List.NonEmptyライブラリに合わせて:-:を:|にした
ビルドとかを全部やってくれるall.batを作った
ついでにCamphor.NonNullListを削除

ver 0.2.7  23:07 2014/04/05 (土)
もう#lineをパクればいい気がしてきた
というかこれ完全にCプリプロセッサという大車輪の再発明だよなー
どっかにCプリプロセッサin Haskell落ちてないかなー(←黙れ)
→あったｗｗｗｗ
Language.Preprocessor.Cpphsだってｗｗｗｗｗｗ
まあでもCに完全に縛られても困るし自分で作りますよ
で、思ったんだけどSource Nameってファイル名のことじゃないの？


ver 0.2.6   9:43 2014/04/05 (土)
やっとincludeの方法を思いついた
今まで行数をずらさないようにしてきたが、includeでは確実にズレる
よって
ファイル
###@stdcalc::
stdcalc
@###
みたいな形で挿入すればstdcalcの行数とファイルの行数を両方把握できる
その分煩雑になりそうだけど


ver 0.2.5  18:25 2014/04/04 (金)
.hiと.oを削除するbat,killjunk.batを作成
これでビルドをためらう必要がなくなる

ver 0.2.4  12:29 2014/04/04 (金)
複数行の複数行コメントバグ修正を楽にするため文字列のサポート終了のお知らせ
その代わりに複数行コメントが実装でき、/もoperatorの下に帰ってきた
そしてstep2以降のコメントは###*~*###となった。仕方ないね。