[
	Single (X,Comm " start of \"lib\\\\stdcalc.txt\" "),
	Single (X,Sp "\n\n\n\n"),
	Single (X,Comm " start of \"lib\\\\fixdecl.txt\" "),
	Single (X,Sp "\n\n\n\n"),
	Single (X,Infl 0 ","),
	Single (X,Sp "\n"),
	Single (X,Infr 5 "="),
	Single (X,Sp " "),
	Single (X,Infr 5 "+="),
	Single (X,Sp " "),
	Single (X,Infr 5 "-="),
	Single (X,Sp " "),
	Single (X,Infr 5 "+=~"),
	Single (X,Sp " "),
	Single (X,Infr 5 "-=~"),
	Single (X,Infr 5 "-|="),
	Single (X,Infr 5 "-|=~"),
	Single (X,Sp "\n"),
	Single (X,Infl 35 "+"),
	Single (X,Sp " "),
	Single (X,Infl 35 "-"),
	Single (X,Sp " "),
	Single (X,Infl 35 "+~"),
	Single (X,Sp " "),
	Single (X,Infl 35 "-~"),
	Single (X,Sp "\n"),
	Single (X,Infl 40 "*"),
	Single (X,Sp " "),
	Single (X,Infl 40 "%"),
	Single (X,Sp " "),
	Single (X,Infl 40 "*~"),
	Single (X,Sp " \n"),
	Single (X,Comm " infixl 40 (/) ; infixl 40 (/~) ; "),
	Single (X,Sp "   \n\n\n\n"),
	Single (X,Comm "  end  of \"lib\\\\fixdecl.txt\" "),
	Single (X,Sp "\n\n\n"),
	Single (X,Comm " a=0; "),
	Single (X,Sp "\n"),
	Single (X,Func1 "clear" (CHAR_AND,"a",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "while" (Var "a",[])),
		Block [		
			Single (X,Call5 (Var "a",[("-=",Constant 1)]))
		],
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\n\n"),
	Single (X,Func2 "=" (CHAR_AND,"a",[]) (CNSTNT_CHAR,"N",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "clear" (Var "a",[])),
		Single (X,Scolon),
		Single (X,Call5 (Var "a",[("+=",Var "N")])),
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\n\n\n"),
	Single (X,Comm " start of \"lib\\\\eq_til.txt\" "),
	Single (X,Sp "\n\n\n\n"),
	Single (X,Comm " start of \"lib\\\\fixdecl.txt\" "),
	Single (X,Sp "\n\n\n\n\n\n\n\n\n\n\n\n"),
	Single (X,Comm "  end  of \"lib\\\\fixdecl.txt\" "),
	Single (X,Sp "\n"),
	Single (X,Func2 "+=~" (CHAR_AND,"a",[]) (CHAR_AND,"z",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "while" (Var "z",[])),
		Block [
			Single (X,Call5 (Var "a",[("+=",Constant 1)])),
			Single (X,Call5 (Var "z",[("-=",Constant 1)]))
		],
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " a+= ~z "),
	Single (X,Sp "\n\n"),
	Single (X,Func2 "+=~" (CHAR_AND,"a",[(",",CHAR_AND,"b")]) (CHAR_AND,"z",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "while" (Var "z",[])),
		Block [
			Single (X,Call5 (Var "a",[("+=",Constant 1)])),
			Single (X,Call5 (Var "b",[("+=",Constant 1)])),
			Single (X,Call5 (Var "z",[("-=",Constant 1)]))
		],
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " (a,b)+= ~z"),
	Single (X,Sp "\n\n"),
	Single (X,Func2 "+=~" (CHAR_AND,"a",[]) (CHAR_AND,"z",[("* ",CNSTNT_CHAR,"N")]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "while" (Var "z",[])),
		Block [
			Single (X,Call5 (Var "a",[("+=",Var "N")])),
			Single (X,Call5 (Var "z",[("-=",Constant 1)]))
		],
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " a+= ~z_star_N "),
	Single (X,Sp "\n\n\n"),
	Single (X,Func2 "-=~" (CHAR_AND,"a",[]) (CHAR_AND,"z",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "while" (Var "z",[])),
		Block [
			Single (X,Call5 (Var "a",[("-=",Constant 1)])),
			Single (X,Call5 (Var "z",[("-=",Constant 1)]))
		],
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " a-= ~z "),
	Single (X,Sp "\n\n"),
	Single (X,Func2 "-=~" (CHAR_AND,"a",[(",",CHAR_AND,"b")]) (CHAR_AND,"z",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "while" (Var "z",[])),
		Block [
			Single (X,Call5 (Var "a",[("-=",Constant 1)])),
			Single (X,Call5 (Var "b",[("-=",Constant 1)])),
			Single (X,Call5 (Var "z",[("-=",Constant 1)]))
		],
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " (a,b)-= ~z"),
	Single (X,Sp "\n\n"),
	Single (X,Func2 "-=~" (CHAR_AND,"a",[]) (CHAR_AND,"z",[("* ",CNSTNT_CHAR,"N")]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "while" (Var "z",[])),
		Block [
			Single (X,Call5 (Var "a",[("-=",Var "N")])),
			Single (X,Call5 (Var "z",[("-=",Constant 1)]))
		],
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " a-= ~z_star_N "),
	Single (X,Sp "\n\n\n"),
	Single (X,Func2 "=~" (CHAR_AND,"a",[]) (CHAR_AND,"z",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "clear" (Var "a",[])),
		Single (X,Scolon),
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "a",[("+= ~",Var "z")])),
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " a= ~z "),
	Single (X,Sp "\n\n"),
	Single (X,Func2 "=~" (CHAR_AND,"a",[(",",CHAR_AND,"b")]) (CHAR_AND,"z",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "clear" (Var "a",[])),
		Single (X,Scolon),
		Single (X,Call1 "clear" (Var "b",[])),
		Single (X,Scolon),
		Single (X,Sp "\n\t"),
		Single (X,Call3 "+= ~" (Var "a",[(",",Var "b")]) (Var "z",[])),
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " (a,b)= ~z"),
	Single (X,Sp "\n\n"),
	Single (X,Func2 "=~" (CHAR_AND,"a",[]) (CHAR_AND,"z",[("* ",CNSTNT_CHAR,"N")]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "clear" (Var "a",[])),
		Single (X,Scolon),
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "a",[("+= ~",Var "z"),("*",Var "N")])),
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " a= ~z_star_N "),
	Single (X,Sp "\n\n\n\n"),
	Single (X,Comm "  end  of \"lib\\\\eq_til.txt\" "),
	Single (X,Sp "\n\n"),
	Single (X,Comm " start of \"lib\\\\eq_bang_til.txt\" "),
	Single (X,Sp "\n\n\n\n"),
	Single (X,Comm " start of \"lib\\\\fixdecl.txt\" "),
	Single (X,Sp "\n\n\n\n\n\n\n\n\n\n\n\n"),
	Single (X,Comm "  end  of \"lib\\\\fixdecl.txt\" "),
	Single (X,Sp "\n"),
	Single (X,Func2 "+=!~" (CHAR_AND,"a",[]) (CHAR_AND,"z",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "a",[("+=",Constant 1)])),
		Single (X,Sp "\n\t"),
		Single (X,Call1 "while" (Var "z",[])),
		Block [
			Single (X,Call1 "clear" (Var "z",[])),
			Single (X,Scolon),
			Single (X,Call5 (Var "a",[("-=",Constant 1)]))
		],
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " a+= !~z"),
	Single (X,Sp "\n\n"),
	Single (X,Func2 "+=!~" (CHAR_AND,"a",[(",",CHAR_AND,"b")]) (CHAR_AND,"z",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "a",[("+=",Constant 1)])),
		Single (X,Sp " "),
		Single (X,Call5 (Var "b",[("+=",Constant 1)])),
		Single (X,Sp "\n\t"),
		Single (X,Call1 "while" (Var "z",[])),
		Block [
			Single (X,Call1 "clear" (Var "z",[])),
			Single (X,Scolon),
			Single (X,Call5 (Var "a",[("-=",Constant 1)])),
			Single (X,Call5 (Var "b",[("-=",Constant 1)]))
		],
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " (a,b)+= !~z"),
	Single (X,Sp "\n\n"),
	Single (X,Func2 "=!~" (CHAR_AND,"a",[]) (CHAR_AND,"z",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "clear" (Var "a",[])),
		Single (X,Scolon),
		Single (X,Sp " "),
		Single (X,Call5 (Var "a",[("+= !~",Var "z")])),
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " a= !~z"),
	Single (X,Sp "\n\n"),
	Single (X,Func2 "=!~" (CHAR_AND,"a",[(",",CHAR_AND,"b")]) (CHAR_AND,"z",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "clear" (Var "a",[])),
		Single (X,Scolon),
		Single (X,Sp " "),
		Single (X,Call1 "clear" (Var "b",[])),
		Single (X,Scolon),
		Single (X,Sp " "),
		Single (X,Call3 "+= !~" (Var "a",[(",",Var "b")]) (Var "z",[])),
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\t"),
	Single (X,Comm " (a,b)= !~z"),
	Single (X,Sp "\n\n\n\n"),
	Single (X,Comm "  end  of \"lib\\\\eq_bang_til.txt\" "),
	Single (X,Sp "\n\n\n"),
	Single (X,Func2 "+=" (CHAR_AND,"a",[]) (CHAR_AND,"b",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Char "c"),
		Single (X,Sp "\n\t"),
		Single (X,Call3 "+= ~" (Var "a",[(",",Var "c")]) (Var "b",[])),
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "b",[("+= ~",Var "c")])),
		Single (X,Sp "\n\t"),
		Single (X,Del "c"),
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\n\n"),
	Single (X,Func2 "-=|~" (CHAR_AND,"a",[]) (CHAR_AND,"b",[]) (Block [
		Single (X,Sp "\n\t"),
		Single (X,Comm " if(b>=a){b=0;a=0;}else{a-=b;b=0;} "),
		Single (X,Sp "\n\t"),
		Single (X,Char "c"),
		Single (X,Char "d"),
		Single (X,Sp "\n\t"),
		Single (X,Call1 "while" (Var "b",[])),
		Block [
			Single (X,Sp "\n\t\t"),
			Single (X,Call3 "+= ~" (Var "c",[(",",Var "d")]) (Var "a",[])),
			Single (X,Sp "\n\t\t   "),
			Single (X,Call5 (Var "a",[("+= ~",Var "d")])),
			Single (X,Sp "\n\t\t"),
			Single (X,Call1 "while" (Var "c",[])),
			Block [
				Single (X,Sp "\n\t\t\t"),
				Single (X,Call1 "clear" (Var "c",[])),
				Single (X,Scolon),
				Single (X,Sp "\n\t\t\t"),
				Single (X,Call5 (Var "a",[("-=",Constant 1)])),
				Single (X,Sp "\n\t\t")
			],
			Single (X,Sp "\n\t\t"),
			Single (X,Call5 (Var "b",[("-=",Constant 1)])),
			Single (X,Sp "\n\t")
		],
		Single (X,Sp "\n\t"),
		Single (X,Del "c"),
		Single (X,Del "d"),
		Single (X,Sp "\n")
	])),
	Single (X,Sp "\n\n\n\n\n\n\n"),
	Single (X,Comm "  end  of \"lib\\\\stdcalc.txt\" "),
	Single (X,Sp "\n"),
	Single (X,Char "a"),
	Single (X,Char "b"),
	Single (X,Char "c"),
	Single (X,Char "d"),
	Single (X,Char "e"),
	Single (X,Char "f"),
	Single (X,Char "g"),
	Single (X,Sp "\n\n"),
	Single (X,Call5 (Var "a",[("+= ",Constant 6)])),
	Single (X,Sp "\n"),
	Single (X,Call5 (Var "b",[("+= ~",Var "a"),("* ",Constant 8)])),
	Single (X,Sp "\n"),
	Single (X,Call5 (Var "b",[("-=",Constant 1)])),
	Single (X,Comm " b=47 "),
	Single (X,Sp "\n\n"),
	Single (X,Call1 "read" (Var "c",[])),
	Single (X,Scolon),
	Single (X,Sp "\n\n"),
	Single (X,Call5 (Var "c",[("-|= ~",Var "b")])),
	Single (X,Comm " using (d,e)"),
	Single (X,Sp "\n"),
	Single (X,Del "b"),
	Single (X,Sp "\n"),
	Single (X,Call5 (Var "d",[("+= ",Var "c")])),
	Single (X,Sp "  "),
	Single (X,Comm " using e"),
	Single (X,Sp "\n\n"),
	Single (X,Call1 "while" (Var "c",[])),
	Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "clear" (Var "c",[])),
		Single (X,Scolon),
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "e",[("+=",Constant 11)])),
		Single (X,Sp "\n")
	],
	Single (X,Sp "\n"),
	Single (X,Del "c"),
	Single (X,Sp "\n\n"),
	Single (X,Call5 (Var "e",[("-=| ~",Var "d")])),
	Single (X,Comm "using (f,g)"),
	Single (X,Sp "\n"),
	Single (X,Del "d"),
	Single (X,Sp "\n\n"),
	Single (X,Call1 "while" (Var "e",[])),
	Block [
		Single (X,Sp "\n\t"),
		Single (X,Call1 "clear" (Var "e",[])),
		Single (X,Scolon),
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "f",[("+=",Constant 10)])),
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "g",[("+= ~",Var "f"),("* ",Constant 11)])),
		Single (X,Sp "\n\t\n\t"),
		Single (X,Call1 "write" (Var "g",[])),
		Single (X,Scolon),
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "g",[("+= ",Constant 7)])),
		Single (X,Call1 "write" (Var "g",[])),
		Single (X,Scolon),
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "g",[("-= ",Constant 8)])),
		Single (X,Call1 "write" (Var "g",[])),
		Single (X,Scolon),
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "g",[("-=",Constant 11)])),
		Single (X,Call1 "write" (Var "g",[])),
		Single (X,Scolon),
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "g",[("+= ",Constant 3)])),
		Single (X,Call1 "write" (Var "g",[])),
		Single (X,Scolon),
		Single (X,Sp "\n\t"),
		Single (X,Call5 (Var "g",[("+=",Constant 13)])),
		Single (X,Call1 "write" (Var "g",[])),
		Single (X,Scolon),
		Single (X,Sp "\n")
	],
	Single (X,Sp "\n")
]