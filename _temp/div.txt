#include <stdcalc>
infixr 5 (+<-~); infixr 5 (<-~); infixl 40 (/); infixr 5 (-|=);

void (-|=) (char& a; const char N)
{
	char b; b+=N;
	a -|=~ b;
	delete b;
}

void (+=)(char&a,char&b;char&c){
	char d; 
	d += c;
	(a,b) +=~ d;
	delete d;
}

void (+<-~) (char& quot, char& rem; char& a / const char N)
{
	char orig; char new_; char not_; char tmp; char tmp2;
	while(a)
	{
		orig += a; /* using tmp */ //copy the current `a` to `orig`
		a -|= N; /* using tmp */ // subtract `N` from `a`
		(tmp2,new_) += a; /* using tmp */ // make two copies of `a`
		not_ += ! ~tmp2;  // `not = !a`
		
		while(new_){clear(new_); quot+=1;} // `if(a){quot+=1;}`
		while(not_){not_-=1; rem+= orig;} // `else{rem += orig;}
		clear(orig);
	}
	delete orig; delete new_; delete not_; delete tmp; delete tmp2;
}

void sprint(char& x1, char& x2, char& x3 +<-~ char& a)
{
	char k;
	(k,x3)+ <- ~a/10;
	(x1,x2)+ <- ~k/10;
	delete k;
}